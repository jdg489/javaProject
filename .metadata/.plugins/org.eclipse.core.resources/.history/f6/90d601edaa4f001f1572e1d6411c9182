package Soccer;

import java.util.Calendar;
import java.util.Scanner;

public class Membership {
    private static Membership m;
    private Scanner sc = new Scanner(System.in);
    
    public static Membership getInstance() {
        if (m == null) {
            m = new Membership();
        }
        return m;
    }

    public static void freeInstance() {
        m = null;
    }

    private Membership() {}
    
    String name; // 이름
    String personalYY; // 태어난 년도
    String personalMM; // 태어난 월
    String personalDD; // 태어난 일
    String email; // 이메일
    String address; // 주소
    String pw; // 카드 비밀번호

    // 회원가입 안내
    public void membershipGuide() {
        System.out.println("안녕하세요 낙슨입니다.\n회원가입을 진행하시겠습니까?\n[1]예 \t [2]아니요");
        
        while (true) {
            System.out.print("\n입력 : ");
            String answer = sc.next();
            
            if (answer.equals("1") || answer.equals("예")) {
                personalData();
                return;
            } else if (answer.equals("2") || answer.equals("아니요")) {
                System.out.println("회원이 아니면 로그인 할 수 없습니다.");
                System.exit(0); // 프로그램 종료
            } else {
                System.out.println("잘못된 입력입니다. 다시 입력해주세요.");
            }
        }
    }

    public void personalData() {
        System.out.println("회원 가입 양식을 작성해주세요");
        
        System.out.print("이름 : ");
        this.name = sc.next();
        
        int personalYYnum = 0;
        int personalMMnum = 0;
        int personalDDnum = 0;

        Calendar cal = Calendar.getInstance();
        int yy = cal.get(Calendar.YEAR);

        while (true) {
            System.out.print("태어난 연도 : ");
            this.personalYY = sc.next();
            
            try {
                personalYYnum = Integer.parseInt(personalYY);

                if (personalYYnum == yy || (personalYYnum > yy - 20 && personalYYnum < yy)) {
                    System.out.println("미성년자는 부모 동의가 있어야 합니다.");
                } else if (personalYYnum < 1900 || personalYYnum > yy) {
                    System.out.println("잘못된 입력입니다.\n태어난 연도를 다시 입력해주세요.");
                } else {
                    break;
                }
            } catch (NumberFormatException e) {
                System.out.println("잘못된 입력입니다. 숫자만 입력해주세요.");
            }
        }

        while (true) {
            System.out.print("태어난 월 : ");
            this.personalMM = sc.next();
            
            try {
                personalMMnum = Integer.parseInt(personalMM);

                if (personalMMnum < 1 || personalMMnum > 12) {
                    System.out.println("잘못된 입력입니다. 태어난 월을 다시 입력해주세요.");
                } else {
                    break;
                }
            } catch (NumberFormatException e) {
                System.out.println("잘못된 입력입니다. 숫자만 입력해주세요.");
            }
        }

        // 입력한 월에 따른 일의 수 계산
        cal.set(Calendar.YEAR, personalYYnum);
        cal.set(Calendar.MONTH, personalMMnum - 1); // 월은 0부터 시작
        int day_count = cal.getActualMaximum(Calendar.DAY_OF_MONTH);

        while (true) {
            System.out.print("태어난 일 : ");
            this.personalDD = sc.next();
            
            try {
                personalDDnum = Integer.parseInt(personalDD);

                if (personalDDnum < 1 || personalDDnum > day_count) {
                    System.out.println("잘못된 입력입니다. 태어난 일을 다시 입력해주세요.");
                } else {
                    break;
                }
            } catch (NumberFormatException e) {
                System.out.println("잘못된 입력입니다. 숫자만 입력해주세요.");
            }
        }

        System.out.print("주소 : ");
        this.address = sc.next();

        System.out.print("결제 비밀번호 : ");
        sc.nextLine(); // next() 오류 방지
        this.pw = sc.next();

        System.out.println("회원가입이 완료되었습니다.");
    }
}









