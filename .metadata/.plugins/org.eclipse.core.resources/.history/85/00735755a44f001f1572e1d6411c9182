package Soccer;

import java.util.Calendar;
import java.util.Scanner;

	public class Membership {
		Scanner sc = new Scanner(System.in);
		
			private static Membership m;
			public static Membership getInstance() {
				// 싱글톤 객체 생성
				if(m == null) {
					m = new Membership();
				} // if 문 끝
				return m;
			} // Membership getInstance 끝
		
			public static void freeInstance() {
				m = null;
			}
		
			private Membership() {}
				String name; //이름
				String personalYY; // 태어난 년도
				String personalMM; // 태어난 월
				String personalDD; // 태어난 일
				String email; // 이메일
				String adderss; // 주소
				String pw; // 카드 비밀번호
	
		
			// 회원가입 양식
			
			public void membershipGuide() {
				System.out.println("안녕하세요 낙슨입니다. \n" + "회원가입을 진행하시겠습니까? \n" + "[1]예 \t [2]아니요" );
				
				String answer = "";
				System.out.println("\n 입력 : ");
				answer = sc.next();
				
				if(answer.equals("1") || answer.equals("예")) {
					personalData();
					return;
				}else if(answer.equals("2") || answer.equals("아니요")) {
					System.out.println("회원이 아니면 로그인 할 수 없습니다.");
					System.exit(0);
				}else {
					System.out.println("잘못된 입력입니다. 다시 입력해주세요.");
				} // else 문 끝
			} // membershipGuide 끝
		
		 	public void personalData() {
			Scanner sc = new Scanner(System.in);
			System.out.println("회원 가입 양식을 작성해주세요");
			
			System.out.println("이름 :");
			this.name = sc.next();
			
			// 미성년자는 가입할 수 없다.
			// 생년월일은 조건에 맞지 않으면 다시 입력을 해야된다.
			int personalYYnum = 0;
			int personalMMnum = 0;
			int personalDDnum = 0;
			
			// 입력하는 연도가 올해를 넘기지 않게 만든다.
			Calendar cal = Calendar.getInstance();
			int yy = cal.get(Calendar.YEAR);
			
				for(;;) {
					System.out.println("태어난 연도 :");
					this.personalYY = sc.next();
					
					personalYYnum = Integer.parseInt(personalYY);
					
						if(personalYYnum == yy || personalYYnum > yy - 20 && personalYYnum < yy) {
								System.out.println("미성년자는 부모 동의가 있어야합니다.");
						System.exit(0);
					}else if(personalYYnum < 1900 || personalYYnum > yy) {
						System.out.println("잘못된 입력입니다." + "\n 태어난 연도를 다시 입력해주세요");
					}else {
						break;
					} // else 문 끝
				} // for 문 끝
			 	for(;;) {
			 		System.out.println("태어난 월 :");
					this.personalMM = sc.next();
					
					personalMMnum = Integer.parseInt(personalMM);
					
					if(personalMMnum == 0 || personalMMnum > 12) {
						System.out.println("잘못된 입력입니다. 태어난 월을 다시 입력해주세요.");
					}else {
						break;
					} // else 문 끝
			 	} // for 문 끝
			 	
			 	// 입력한 월에 따른 일의 변화
			 	DatePrinter.printDateTime(cal);
			 	cal.set(Calendar.DAY_OF_MONTH, personalMMnum);
			 	int day_count = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
			 	
				 	for(;;) {
				 		System.out.println("태어난 일 :");
				 		this.personalDD = sc.next();
				 		
				 		personalDDnum = Integer.parseInt(personalDD);
				 		
				 	}
			 	
			 	
		 	} // personalData 끝
		 	
} // Membership 끝










