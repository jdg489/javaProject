package JDG_notes;

public class Operator {
	
	/*
	 * 연산자(Operator)
	 * 자바에서 제공하는 이항 연산자들										| 	  결합 방향	|    우선 순위   	|
	 * [] , .														|		>		|		1(높음)	|
	 * expr++ , expr--												|		<		|		2	  	|
	 * ++expr , --expr , +expr , -expr , ~ , ! , (type)				|		<		|		3	  	|
	 * * , / , %													|		>		|	   	4	  	|
	 * + , -														|		>		|  		5	  	|
	 * << , >> , >>>												|		>		|       6     	|
	 * < , > , <= , >= , instanceof									|		>		|		7		|
	 * == !=														|		>		|		8		|
	 * &															|		>		|		9		|
	 * ^															|		>		|		10		|
	 * |															|		>		|		11		|
	 * &&															|		>		|		12		|
	 * ||															|		>		|		13		|
	 * ? expr : expr												|		<		|		14		|
	 * = , += , -= , *= , /= , %= , ^= , != , <<= , >>= , >>>=      |		<		|		15(낮음) |
	 */
	
	/*
	  산술 연산자 
	  + , - , * , / %
	  사칙연산을 다루는 연산자로 가장 많이 사용되는 연산자이다.
	  피연산자들의 결합 방향은 왼쪽에서 오른쪽이다. ->
	  ex1) 5+3
	 */
	/*
	 대입 연산자
	 += , -= , *= , /= , %= <<= , >>= , >>>= , &= , |= , ^=
	 변수에 값을 대입할때 사용하는 이항 연산자이다.
	 피연산자들의 결합 방향은 오른쪽에서 왼쪽이다.  <-
	 ex1) num1 += 2;
	 */
	
	/*
	 증감 연산자 
	  ++ , --
	  변수에 저장된 값을 1씩 증가 혹은 감소 시킬 때 사용하는 연산자이다.
	  피연산자의 어느 쪽에 위치하는가에 따라서 연산의 순서와 결과가 달라진다. 
	  ex1) val = ++num;
	 */
	
	/*
	 비교 연산자
	 == , != , > , >= , < , <=
	 부등호를 사용해서 참인지 거짓인지 boolean 으로 결과값을 출력하는 연산자이다.
	 */
	
	/*
	 논리 연산자
	 && , || , !
	 주어진 논리식을 판단하여, 참과 거짓을 결정하는 연산자이다. 
	 */
	
	/*
	 비트 연산자 
	 & , | , ^ , ~ , << , >> , >>> 
	 많이 사용되지는 않지만 비트 연산은 컴퓨터가 기존 자료형(int, char 등)을 비트로 변환하는 작업을 도와주는 연산자이다.
	 */
	
	/*
	 삼항 연산자
	 ? , :
	 간단한 제어 처리를 할때 사용하는 연산자이다.
	 */
	
	/*
	 instanceof 연산자	 
	  객체가 어떤 클래스인지 어떤 클래스를 상속받았는지 확인하는데 사용하는 연산자이다.
	 */
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
